buildscript {
    repositories {
        jcenter()
        google()
    }
    // these dependencies are used by gradle plugins, not by the project
    dependencies {
        // Android gradle plugin
        classpath 'com.android.tools.build:gradle:4.1.2'
    }
}

plugins {
    // check for updates of gradle plugin dependencies
    id 'com.github.ben-manes.versions' version '0.36.0'
}

allprojects {
    repositories {
        maven { url "https://jitpack.io" }
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "menion.android.whereyougo"
        // versionCode for legacy version needs to be set here manually before building a new legacy version on the CI
        // versionCode of the legacy version always needs to be smaller than the versionCode of the normal release. Ideally only increase by 1 for each legacy release.
        versionCode 20220105
        // versionName for legacy version needs to be set here manually before building a new legacy version on the CI
        // versionName is not evaluated by Google. The name of the legacy version can be set identical to the corresponding normal release with suffix -legacy.
        versionName "2022.01.14-legacy"
        minSdkVersion 16
        maxSdkVersion 20
        //noinspection OldTargetApi
        targetSdkVersion 30

        // include only those language resources from libraries that we actively maintain ourselves in the translation project
        // when changed here - also change in array.xml/strings_pref_languages.xml is necessary
        // not yet enough strings translated (>40%): "sl","sv"
        resConfigs "en","ar","ca","cs","da","de", "el","es","fi","fr","hu","it","ja","ko","nb","nl","pl","pt-rBR","pt-rPT","ru","sk","tr"
    }

    // define ndk version to use local the same version as on CI
    ndkVersion '21.0.6113669'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    packagingOptions {
        // exclude ARMEABI native so file, ARMEABI has been removed in NDK r17.
        exclude "lib/armeabi/**"
    }
}

dependencies {
    fileTree(dir: 'libs', include: ['*.jar'])

    // Legacy Support Library
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Locus Maps integration
    //noinspection GradleDependency
    implementation 'com.asamm:locus-api-android:0.2.7'

    // openwig@cgeo
    implementation 'com.github.cgeo:openwig:1.0.0'

    // File select dialog
    implementation 'com.github.jfmdev:aFileDialog:v1.0.6'

    //
    implementation 'com.github.jspricke.mapsforge-map-whereyougo:mapsforge-map:75d7c20'

    // barcode scanner
    // v4.x: Minimum SDK version 24, downgradable to 14 by using zxing:core 3.3.0, uses androidx
    implementation 'com.journeyapps:zxing-android-embedded:4.1.0'
    // downgrade zxing:core to 3.3.0 or earlier for Android 14+ support
    // AndroidManifest.xml: use tools:overrideLibrary="com.google.zxing.client.android" to force usage
    //noinspection GradleDependency
    implementation 'com.google.zxing:core:3.3.0'

    // Okhttp network access. 3.12.x is API level < 21, 3.13 or better requires API 21
    //noinspection GradleDependency
    implementation 'com.squareup.okhttp3:okhttp:3.12.13'

    // ani gif support
    // minSdk=17 from version 1.2.16
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.15'
}

/*
 * Configuration for dependencyUpdates, see https://github.com/ben-manes/gradle-versions-plugin
 */
tasks.named('dependencyUpdates') {
    checkForGradleUpdate = true
    revision = "release"
    gradleReleaseChannel = "current"
}
